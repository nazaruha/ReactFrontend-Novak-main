https://github.com/novakvova/React_Front-end21 - РЕПО ВЧИТЕЛЯ

itchief.ru/bootstrap

useState ✔️
useRef ✔️
useReducer
useEffect ✔️
useFetch
Деструктуризація ✔️

ДЗ: ✔️
	Зробити відображення списку товарів за допомогою map.
	У вас має бути об'єкти, який описує товар.
	У нас є масив товарів, кількість довільна.
	Товари вивести у вигляді карток.
	На 12 балів, зробити, щоб була кнопка додати новий. 
	Коли її нажимаємо у списку появляється новий товар. (просто клацаєш і добавляєтьс просто "НОВИЙ ТОВАР" з фоткою дефолтоною або рандомною)

---------------
npm classNames ✔️
image style
file work ✔️
props ✔️

ДЗ: ✔️
	Прокоментувати увесь код класної роботи
	Написати у коментарях пояснення до кожного методу і частинки коду.
	Буду читать. Усіх із святом наступаючим :)
	
---------------
dnschecker -> create free domain (bagging)
MobaXTern -> like XAMPP
postgres -> Sql Database
Dbeaver -> може працювати на лінуксі, віндовсі, макОС
certbot.eff.org -> безкоштовно дає замок на сайт
проксі - ловить від когось запит і перекидає його куда треба
nginx

ДЗ: ✔️
	з вашого проекта при натиску на кнопку відправити запит на сервер, який має	
	прислати список категорій.
	https://f21.allin.ml/api/Categories/list
	Дані можна вивести у консоль.

---------------
ДЗ: ✔️
	* занотувати про axios (pages/ApiProducts/index.tsx) +
	* занотувати про env (~/) + 
	* занотувати http_common.ts +
	* recaptcha v2 - видима рекаптча; recaptcha v3 - невидима рекаптча
	* oas2.0 - це restApi штука, дає можливість заходити на аккаунт скільки завгодно разів з різних девайсів. Тобто можна одночасно логінитись 1000 разів+
	На форму додати вивід помилок із сервера. 
	Помилки мають виводитися біля полів, до яких вони відносяться  (Formik validation \ bootstrap validation)
	Якщо помилки загальні(invalid) просто писати після заголовку
	На 12 балів зробити Loading, який буде відображатися, коли ми відправляємо запит на сервер.
	Анімація зникає, коли від сервера прийшов результат

---------------
"email": "lilah@gmail.com",
"firstName": "Ліла",
"secondName": "Кабал",
"photo": "[base_64 photo]"
"phone": "+3809748392910",
"password": "Qwerty1-",
"confirmPassword": "Qwerty1-"

* jest npm - для створення тестів в реакті

ДЗ: ✔️
	Робити форму валідації на клієнті

---------------
JWT - Jason Web Token (зберігає данні залогіненого юзера в json форматі)
відкриті данні з токена називаються - claim
алгоритм шифрування токена:  HS256
юзаєм npm щоб працювати з токенами (jwt-decode npm нічо такий)

useNаvigate хук для навігації ✔️

ПРАКТИЧНА: ✔️
	Зробити форму додавання категорії. Протестувати авторизацію.

ДЗ: ✔️
	Зробити видалення категорії. ✔️
	На 12 балів має появлятися модальне вікно, яке запитує чи ви точно впевнені. ✔️
	Алерт - не можна.
	Модалку можна взять із бутстрап. ✔️
МОЇ ЗАМАШКИ ШОСЬ ЗРОБИТЬ:
	1. При успішному вході - перекидувати на головну сторінку ✔️
	2. Зробити на головній сторінці sideBar де будуть дотаткові кнопки
	3. Зробити додаткову кнопочку для переходу в створення категорії, щоб вона була видима лише тоді, коли ти зайшов як АДМІН ✔️
	4. В створенні категорії (admin/categories/create) робити urlSlug googleTranslate'oм через Api (https://rapidapi.com/hub)
	5. При успішному створенні категорії перекидувати на перегляд списку всіх категорій ✔️
	6. В списку категорій зробити видалення їх, з модальним вікном яке питає чи точно удалять. КНОПКА МАЄ БУТИ ВИДИМА ЛИШЕ АДМІНУ ✔️
	7. Не давать доступ до стори (admin/categories/create) якщо ти не адмін ✔️

---------------
Formik в RegisterPage робили

ДЗ:
	Зробити стандратний приклад по Redux. (https://redux.js.org/introduction/getting-started (BASIC EXAMPLE))
	Протестувати і написати коментарі(пояснення до коду).
	Буду показувати на парі

---------------
reducer - зберігає і міняє данні
useSelector() - получає данні
useDispatch() - міняє данні

ДЗ:
	Після входу у головному меню має писати електронна пошта користувача,
	який зараз залогінився у системі  ✔️
	На 12 балів після входу перекинуть на профіль користувача. ✔️

---------------

ДЗ:
	Зробити сторінку додавання товарів. ✔️
	На 12 балів вона має працювать із сервером. ✔️

---------------

ДЗ:
	Зробити вибір фото для створення товару, як на сайті autoria. ✔️
	Загрузка фото проводить по адресі (api/products/upload)
	Результат:
		{
			"id": 1,
			"name": "sdsds.jpg"
		}
	Показати фото на сайті додавання товару і зберегти id ✔️

---------------

Підсказка для фоток: object-fit

ДЗ:
	Зробити вивід списку товарів разом із фото цих товарір. ✔️
	Можна у вигляді таблиці ✔️
	На 12 балів на додавання товару додати FroalaEditor(TinyMCE) для опису (Для крутого Description вікна) https://www.tiny.cloud/

---------------
!!!ProductListPage.tsx робили!!!

useSearchParams (react-router-dom) - ізучить 

ДЗ:
	Додати пошук товара по полям:
	Name, Price, CategorySlug

---------------
Робили видалення продуктів у ProductListPage.tsx через модальне вікно, 
яке створили в окремому компоненті з властивостями (ModalDeleteTeacher)

ДЗ:
	Що хотілося б покращити.
	1. При додавані товарів потрібно додати кнопочку видалити додане фото.✔️
	2. Показати ціну товару при показі списку товарів.
	3. Відцентрувати фото при додавані товару.
	4. Мінімальну сторінку перегляду певного товару товару.
	5. Зробити, щоб можна було робити пошук по декільком полям товару. На 12 балів.✔️

---------------
* Конфіг для едітора з гітхаба взять

ДЗ:
	Зробити відображення товару при клацані на ньому

---------------
ProductEditPage.tsx не доробили

ДЗ: ✔️
	Закінчити редагування товару (там з фотками треба доробить і відправку)
	На 12 балів, щоб працювало видалення тих фото, що були у товарі (видалення щено нових добавлених працює)
	* setImgViews(product.images); -> чомусь не подобається викладачу (Якось обійти, шось подумать)

---------------
Доробили редагування продукту та, вивід продуктів в HomePage (папка home) з прекрасними фотками

ДЗ:
	Підібрати хостинг для вашого сайту.
	Подивитися який можна обрати домен - найбільш підходящий по ціні.
	!!!! Почати роботу над кошиком !!!!


